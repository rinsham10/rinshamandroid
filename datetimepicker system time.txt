<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
 android:layout_height="match_parent"
android:paddingLeft="@dimen/activity_horizontal_margin"
 android:paddingRight="@dimen/activity_horizontal_margin"
 android:paddingTop="@dimen/activity_vertical_margin"
 android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".MainActivity"> 
 <EditText 
 android:layout_width="200dp"
 android:layout_height="wrap_content"
 android:id="@+id/in_date"
 android:layout_marginTop="82dp"
 android:layout_alignParentTop="true"
 android:layout_alignParentLeft="true"
 android:layout_alignParentStart="true" /> 
 <Button 
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/sel_date"
 android:id="@+id/btn_date"
 android:layout_alignBottom="@+id/in_date"
 android:layout_toRightOf="@+id/in_date"
 android:layout_toEndOf="@+id/in_date" />
<EditText 
 android:layout_width="200dp"
 android:layout_height="wrap_content"
 android:id="@+id/in_time"
 android:layout_below="@+id/in_date"
 android:layout_alignParentLeft="true"
 android:layout_alignParentStart="true" /> 
 <Button 
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/sel_time"
 android:id="@+id/btn_time"
 android:layout_below="@+id/btn_date"
 android:layout_alignLeft="@+id/btn_date"
 android:layout_alignStart="@+id/btn_date" /> 
</RelativeLayout>
.java file 
package com.example.tencurrentsystemtime; 
import android.widget.TimePicker; 
import java.util.Calendar; 
import android.os.Bundle; 
import android.app.Activity; 
import android.view.View; 
import android.view.View.OnClickListener; 
import android.widget.Button; 
import android.widget.EditText; 
public class MainActivity extends Activity implements
 View.OnClickListener { 
 Button btnDatePicker, btnTimePicker; 
 EditText txtDate, txtTime; 
 private int mYear, mMonth, mDay, mHour, mMinute; 
 @Override 
 protected void onCreate(Bundle savedInstanceState) { 
 super.onCreate(savedInstanceState); 
 setContentView(R.layout.activity_main); 
 btnDatePicker=(Button)findViewById(R.id.btn_date); 
 btnTimePicker=(Button)findViewById(R.id.btn_time); 
 txtDate=(EditText)findViewById(R.id.in_date); 
 txtTime=(EditText)findViewById(R.id.in_time); 
 btnDatePicker.setOnClickListener(this); 
 btnTimePicker.setOnClickListener(this); 
 } 
 @Override 
 public void onClick(View v) {
if (v == btnDatePicker) { 
 // Get Current Date 
 final Calendar c = Calendar.getInstance(); 
 mYear = c.get(Calendar.YEAR); 
 mMonth = c.get(Calendar.MONTH); 
 mDay = c.get(Calendar.DAY_OF_MONTH); 
 DatePickerDialog datePickerDialog = new DatePickerDialog(this, 
 new DatePickerDialog.OnDateSetListener() { 
 @Override 
 public void onDateSet(DatePicker view, int year, 
 int monthOfYear, int dayOfMonth) { 
 txtDate.setText(dayOfMonth + "-" + (monthOfYear + 1) + "-" + year); 
 } 
 }, mYear, mMonth, mDay); 
 datePickerDialog.show(); 
 } 
 if (v == btnTimePicker) { 
 // Get Current Time 
 final Calendar c = Calendar.getInstance(); 
 mHour = c.get(Calendar.HOUR_OF_DAY); 
 mMinute = c.get(Calendar.MINUTE); 
 
 
 // Launch Time Picker Dialog 
 TimePickerDialog timePickerDialog = new TimePickerDialog(this, 
 new TimePickerDialog.OnTimeSetListener() { 
 @Override 
 public void onTimeSet(TimePicker view, int hourOfDay, 
 int minute) { 
 
 txtTime.setText(hourOfDay + ":" + minute); 
 } 
 }, mHour, mMinute, false); 
 timePickerDialog.show(); 
 } 
 } 
}